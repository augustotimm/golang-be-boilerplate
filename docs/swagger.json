{
    "swagger": "2.0",
    "info": {
        "description": "A complete boilerplate in golang using gin framework",
        "title": "Backend BoilerPlate",
        "contact": {
            "name": "Augusto Timm",
            "url": "https://github.com/augustotimm",
            "email": "augusto.timm@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:1337",
    "paths": {
        "/health-check": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Shows information if api is running",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/healthCheckController.HealthCheck"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/hello-world": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Simple list data example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.HelloWorldPresenter"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "healthCheckController.HealthCheck": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Server running!"
                }
            }
        },
        "models.HelloWorldPresenter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "ea68c913-2e60-487d-b108-26836271e500"
                },
                "name": {
                    "type": "string",
                    "example": "jon doew"
                }
            }
        }
    }
}